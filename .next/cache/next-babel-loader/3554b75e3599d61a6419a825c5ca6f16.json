{"ast":null,"code":"var _jsxFileName = \"C:\\\\sams-papelaria\\\\loja\\\\components\\\\Item\\\\Frete.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getCart } from '../../utils/cart';\nimport { formatMoney, codigosCorreios } from '../../utils';\nimport { formatCEP } from '../../utils/format';\n\nclass Frete extends Component {\n  constructor(props) {\n    super();\n\n    _defineProperty(this, \"onChangeCEP\", e => {\n      this.setState({\n        cep: formatCEP(e.target.value)\n      });\n    });\n\n    this.state = {\n      cep: props.cep || \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.fretes && this.props.fretes && !this.props.freteSelecionado) {\n      this.props.selecionarFrete(this.props.fretes[0]);\n    }\n  }\n\n  selectFrete(codigo, fretes) {\n    const frete = fretes.reduce((all, frete) => frete.Codigo.toString() === codigo ? frete : all, {});\n    this.props.selecionarFrete(frete);\n  }\n\n  renderOpcoesFrete() {\n    const {\n      fretes,\n      freteSelecionado\n    } = this.props;\n    if (!fretes || !freteSelecionado) return null;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, __jsx(\"select\", {\n      value: freteSelecionado.Codigo,\n      onChange: e => this.selectFrete(e.target.value, fretes),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, fretes.map((frete, index) => __jsx(\"option\", {\n      value: frete.Codigo,\n      key: frete.Codigo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, codigosCorreios[frete.Codigo], \"\\xA0 (\", frete.PrazoEntrega, \" dias \\xFAteis) -\\xA0\", formatMoney(frete.Valor.replace(\",\", \".\"))))));\n  }\n\n  renderOpcaoSelecionada() {\n    const {\n      freteSelecionado,\n      cleanFretes\n    } = this.props;\n    if (!freteSelecionado || !freteSelecionado.Valor) return null;\n    return __jsx(\"div\", {\n      className: \"flex vertical flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(\"h4\", {\n      className: \"valor-frete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, formatMoney(freteSelecionado.Valor.replace(\",\", \".\"))), __jsx(\"span\", {\n      className: \"limpar-CEP\",\n      onClick: () => cleanFretes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Limpar CEP\"));\n  }\n\n  calcularFrete() {\n    const {\n      cep\n    } = this.state;\n    if (!cep || cep.length !== 9) return alert(\"Digite o CEP corretamente.\");\n    this.props.calcularFrete(cep, getCart());\n  }\n\n  renderFormularioCEP() {\n    return __jsx(\"div\", {\n      className: \"flex-1 flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"flex-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: this.state.cep,\n      name: \"CEP\",\n      className: \"campo-frete\",\n      onChange: this.onChangeCEP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"flex-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      onClick: () => this.calcularFrete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"CALCULAR\")));\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"dados-do-carrinho-item flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"flex-1 flex vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      className: \"headline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Frete\"), this.props.freteSelecionado && this.renderOpcoesFrete()), __jsx(\"div\", {\n      className: \"flex-1 flex flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, this.props.freteSelecionado ? this.renderOpcaoSelecionada() : this.renderFormularioCEP()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  carrinho: state.carrinho.carrinho,\n  freteSelecionado: state.carrinho.freteSelecionado,\n  fretes: state.carrinho.fretes,\n  cep: state.carrinho.cep\n});\n\nexport default connect(mapStateToProps, actions)(Frete);","map":{"version":3,"sources":["C:/sams-papelaria/loja/components/Item/Frete.js"],"names":["React","Component","connect","actions","getCart","formatMoney","codigosCorreios","formatCEP","Frete","constructor","props","e","setState","cep","target","value","state","componentDidUpdate","prevProps","fretes","freteSelecionado","selecionarFrete","selectFrete","codigo","frete","reduce","all","Codigo","toString","renderOpcoesFrete","map","index","PrazoEntrega","Valor","replace","renderOpcaoSelecionada","cleanFretes","calcularFrete","length","alert","renderFormularioCEP","onChangeCEP","render","mapStateToProps","carrinho"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport { getCart } from '../../utils/cart';\r\nimport { formatMoney, codigosCorreios } from '../../utils';\r\nimport { formatCEP } from '../../utils/format';\r\n\r\nclass Frete extends Component {\r\n\r\n    constructor(props){\r\n        super();\r\n        this.state = { \r\n            cep: props.cep || \"\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(!prevProps.fretes && this.props.fretes && !this.props.freteSelecionado){\r\n            this.props.selecionarFrete(this.props.fretes[0]);\r\n        }\r\n    }\r\n\r\n    selectFrete(codigo, fretes){\r\n        const frete = fretes.reduce(\r\n            (all, frete) => \r\n            frete.Codigo.toString() === codigo ? frete : all, {}\r\n        );\r\n        this.props.selecionarFrete(frete);\r\n    }\r\n\r\n    renderOpcoesFrete(){\r\n        const { fretes, freteSelecionado } = this.props;\r\n        if(!fretes || !freteSelecionado) return null;\r\n        return (\r\n            <div>\r\n                <select \r\n                    value={freteSelecionado.Codigo}\r\n                    onChange={(e) => this.selectFrete(e.target.value, fretes)} >\r\n                    {\r\n                        fretes.map((frete, index) => (\r\n                            <option value={frete.Codigo} key={frete.Codigo}>\r\n                                {codigosCorreios[frete.Codigo]}&nbsp;\r\n                                ({frete.PrazoEntrega} dias úteis) -&nbsp;\r\n                                {formatMoney(frete.Valor.replace(\",\",\".\"))}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderOpcaoSelecionada(){\r\n        const { freteSelecionado, cleanFretes } = this.props;\r\n        if(!freteSelecionado || !freteSelecionado.Valor) return null;\r\n        return (\r\n            <div className=\"flex vertical flex-center\">\r\n                <h4 className=\"valor-frete\">\r\n                    {\r\n                        formatMoney(freteSelecionado.Valor.replace(\",\",\".\"))\r\n                    }\r\n                </h4>\r\n                <span \r\n                    className=\"limpar-CEP\"\r\n                    onClick={() => cleanFretes()} >\r\n                    Limpar CEP\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    calcularFrete(){\r\n        const { cep } = this.state;\r\n        if(!cep || cep.length !== 9) return alert(\"Digite o CEP corretamente.\");\r\n        this.props.calcularFrete(cep, getCart());\r\n    }\r\n\r\n    onChangeCEP = (e) => {\r\n        this.setState({ cep: formatCEP(e.target.value) })\r\n    }\r\n\r\n    renderFormularioCEP(){\r\n        return (\r\n            <div className=\"flex-1 flex\">\r\n                <div className=\"flex-3\">\r\n                    <input \r\n                        value={this.state.cep} \r\n                        name=\"CEP\" \r\n                        className=\"campo-frete\"\r\n                        onChange={this.onChangeCEP} />\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                    <button \r\n                        className=\"btn btn-primary btn-sm\"\r\n                        onClick={() => this.calcularFrete()} >\r\n                        CALCULAR\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"dados-do-carrinho-item flex\">\r\n                <div className=\"flex-1 flex vertical\">\r\n                    <p className=\"headline\">Frete</p>\r\n                    { this.props.freteSelecionado && this.renderOpcoesFrete() }\r\n                </div>\r\n                <div className=\"flex-1 flex flex-center\">\r\n                    { this.props.freteSelecionado ? \r\n                        this.renderOpcaoSelecionada() : \r\n                        this.renderFormularioCEP() \r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    carrinho: state.carrinho.carrinho,\r\n    freteSelecionado: state.carrinho.freteSelecionado,\r\n    fretes: state.carrinho.fretes,\r\n    cep: state.carrinho.cep\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(Frete);"]},"metadata":{},"sourceType":"module"}